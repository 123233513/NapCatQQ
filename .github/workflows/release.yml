name: "release"
on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target_platform: [linux,darwin]
        target_arch: [x64, arm64]
    steps:
    - name: Clone Main Repository
      uses: actions/checkout@v4
      with:
          repository: 'NapNeko/NapCat'
          submodules: true
          token: ${{ secrets.NAPCAT_BUILD }}
    - name: Use Node.js 20.X
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - name: Build NuCat Linux
      run: |
          npm i --arch=${{ matrix.target_arch }} --platform=${{ matrix.target_platform }} 
          npm run build:prod
          cd dist
          npm i --omit=dev --arch=${{ matrix.target_arch }} --platform=${{ matrix.target_platform }} 
          cd ..
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: NapCat.${{ matrix.target_platform }}.${{ matrix.target_arch }}
        path: dist
  build-win32:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target_platform: [win32]
        target_arch: [x64]
    steps:
        - name: Clone Main Repository
          uses: actions/checkout@v4
          with:
                repository: 'NapNeko/NapCat'
                submodules: true
                token: ${{ secrets.NAPCAT_BUILD }}
        - name: Use Node.js 20.X
          uses: actions/setup-node@v4
          with:
              node-version: 20.x
        - name: Build NuCat Linux
          run: |
                npm i --arch=${{ matrix.target_arch }} --platform=${{ matrix.target_platform }} 
                npm run build:prod
                cd dist
                npm i --omit=dev --arch=${{ matrix.target_arch }} --platform=${{ matrix.target_platform }} 
                cd ..
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
              name: NapCat.${{ matrix.target_platform }}.${{ matrix.target_arch }}
              path: dist
  release-napcat:
    needs: [build-win32,build-linux]
    runs-on: ubuntu-latest
    steps:
    - name: Download All Artifact
      uses: actions/download-artifact@v4
    
    - name: Compress subdirectories
      run: |
       for dir in */; do
          base=$(basename "$dir")
          zip -r "${base}.zip" "$dir"
        done 
    - name: Create Release Draft and Upload Artifacts
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.NAPCAT_BUILD }}
        files: |
          NapCat.win32.amd64.zip
          NapCat.linux.amd64.zip
          NapCat.linux.arm64.zip
          NapCat.darwin.amd64.zip
          NapCat.darwin.arm64.zip
        draft: true
